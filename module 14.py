# 2

# Чтобы сдать зачёт студент Пётр написал программу. Она определяет уравнение прямой,
# проходящей через две точки, по её координатам: y = k * x + b. K и b — числа,
# которые означают угловой коэффициент и вертикальное смещение прямой. Программа выглядит так:

# print("Введите первую точку")
# x1 = float(input('X: '))
# y1 = float(input('Y: '))
# print("\nВведите вторую точку")
# x2 = float(input('X: '))
# y2 = float(input('Y: '))
# if x1 == x2:
#     print("Уравнение прямой, проходящей через эти точки:\nx = a")
# elif y1 == y2:
#     print(f"Уравнение прямой, проходящей через эти точки:\ny = {y1} ")
# else:
#     x_diff = x1 - x2
#     y_diff = y1 - y2
#     k = y_diff / x_diff
#     b = y2 - k * x2
#     print("Уравнение прямой, проходящей через эти точки:")
#     print("y = ", k, " * x + ", b)

# 3

# Напишите две функции: первая принимает одно целое положительное число N и находит сумму всех цифр числа N.
# Вторая принимает число N и считает количество цифр в числе. В ответ выводится разность суммы чисел и количества.

# Пример работы программы:

# Введите число: 500

# Сумма чисел: 5
# # Количество цифр в числе: 3
#
# Разность суммы и количества цифр: 2


# num = input('Введите число: ')
#
# def sum_numbews(num, summ = 0):
#     for i in num:
#         summ += int(i)
#     return summ
#
#
#
# def count_numders(num, count = 0):
#     for i in num:
#         count += 1
#     return count
#
#
# summ_total = sum_numbews(num)
# count_total = count_numders(num)
#
# print(f'Сумма чисел: {summ_total}\nКоличество цифр в числе: {count_total}\n'
#       f'Разность суммы и количества цифр: {summ_total - count_total}')

# 5

# Дано натуральное число n>1. Напишите функцию, которая находит его наименьший делитель, отличный от 1.
#
# Пример работы программы 1:
#
# Введите число: 6
#
# Наименьший делитель, отличный от единицы: 2
#
#
#
# Пример работы программы 2:
#
# Введите число: 17
#
# Наименьший делитель, отличный от единицы: 17


# def smallest_divisor(number):
#     for i in range(2, number + 1):
#         if number % i == 0:
#             return i
#
#
# number = int(input('Введите число: '))
# if number > 1:
#     result = smallest_divisor(number)
#     print(f'Наименьший делитель, отличный от единицы: {result}')
# elif number <= 1:
#     print('Введите число больше 1')

# 4

# Пользователь вводит два вещественных числа — N и K. Напишите программу,
# которая сначала заменяет целую часть на число.
# Оно должно отличаться от исходного тем, что цифры записаны в обратном порядке.
# Затем то же самое программа делает с дробной частью. После этого числа складываются и сумма выводится на экран.
#
# Пример работы программы:
#
#
#
# Введите первое число: 102.12
#
# Введите второе число: 123.34
#
# Первое число наоборот: 201.21
#
# Второе число наоборот: 321.43
#
# Сумма: 522.64


first_num = float(input('Введите первое число: '))
second_num = float(input('Введите второе число: '))



left_revers = ''
right_revers = ''


def revers(number):
    int_num = int(number)
    float_num = number - int_num
    for i in range(len(str(int_num)), -1, -1):
        left_revers += i
    for i in range(len(str(float_num)), -1, -1):
        right_revers += i






# 6

# Пример работы программы 1:
#
# Введите координаты монетки:
#
# X: 0.5
#
# Y: 0.5
#
# Введите радиус: 1
#
# Монетка где-то рядом
#
#
#
# Пример работы программы 2:
#
# Введите координаты монетки:
#
# X: 2
#
# Y: 2
#
# Введите радиус: 1
#
# Монетки в области нет
#
#
import  math
x = float(input('X: '))
y = float(input('Y: '))
r = int(input('Введите радиус: '))

# revers_l = f
import  math



h = math.sqrt(x**2 + y ** 2)
if h <= r:
    print('Монетка где-то рядом')
elif h > r:
    print('Монетки в области нет')



